<#@ include file="MCS.Core.ttinclude" #>
<#
     Namespace = "MCS.Entities";
     RepoName = "MCS";
	 ClassPrefix = "";
	 ClassSuffix = "Info";
	 ExcludePrefix = new string[] { }; // Exclude tables by prefix.
	 ClassReplaces = new string[] { "WMS_", "WMs_", "wms_" };
	 EnumLists = new Dictionary<string, string> {
        { "OrderInfo.OrderType", "OrderTypes" }, 
        { "PendingSettlementOrderInfo.OrderType", "OrderInfo.OrderTypes" }, 
        { "OrderInfo.OrderStatus", "OrderOperateStatus" },
        { "OrderInfo.DeliveryType", "DeliveryType" },
		{ "OrderInfo.PaymentType", "PaymentTypes" },
		{ "BrokerageIncomeInfo.Status", "BrokerageStatus" },
		{ "StatisticOrderCommentInfo.CommentKey", "EnumCommentKey" },
		{ "OrderRefundInfo.RefundMode", "OrderRefundMode" },
		{ "OrderRefundInfo.RefundPayType", "OrderRefundPayType" },
		{ "OrderRefundInfo.SellerAuditStatus", "OrderRefundAuditStatus" },
		{ "OrderRefundInfo.ManagerConfirmStatus", "OrderRefundConfirmStatus" },
		{ "ProductInfo.AuditStatus", "ProductAuditStatus" },
		{ "ProductInfo.SaleStatus", "ProductSaleStatus" },
		{ "MemberContactInfo.UserType", "UserTypes" },
		{ "MemberOpenIdInfo.AppIdType", "AppIdTypeEnum" },
		{ "AccountInfo.Status", "AccountStatus" },
		{ "AccountDetailInfo.OrderType", "EnumOrderType" },
		{ "BonusInfo.Type", "BonusType" },
		{ "FreightTemplateInfo.ValuationMethod", "ValuationMethodType" },
		{ "FreightTemplateInfo.IsFree", "FreightTemplateType" },
		{ "CapitalDetailInfo.SourceType", "CapitalDetailType" },
		{ "ApplyWithDrawInfo.ApplyStatus", "ApplyWithDrawStatus" },
		{ "ApplyWithDrawInfo.ApplyType", "UserWithdrawType" },
		{ "ChargeDetailInfo.ChargeStatus", "ChargeDetailStatus" },
		{ "ChargeDetailShopInfo.ChargeStatus", "ChargeDetailInfo.ChargeDetailStatus" },
		{ "MemberIntegralRecordInfo.TypeId", "MemberIntegralInfo.IntegralType" },
		{ "MemberIntegralRecordActionInfo.VirtualItemTypeId", "MemberIntegralInfo.VirtualItemType" },
		{ "ShopInfo.ShopStatus", "ShopAuditStatus" },
		{ "CouponRecordInfo.CounponStatus", "CounponStatuses" },
		{ "ShopBonusReceiveInfo.State", "ReceiveState" },
		{ "MemberInfo.Sex", "SexType" },
		{ "ActiveMarketServiceInfo.TypeId", "MarketType" },
		{ "MemberGroupInfo.StatisticsType", "MemberStatisticsType" },
		{ "BonusInfo.Style", "BonusStyle" },
		{ "BonusInfo.PriceType", "BonusPriceType" }, 
		{ "CouponSendByRegisterInfo.Status", "CouponSendByRegisterStatus" },
		{ "SendMessageRecordInfo.ContentType", "WXMsgType" },
		{ "SendMessageRecordInfo.MessageType", "MsgType" },
		{ "CouponInfo.ReceiveType", "CouponReceiveType" },
		{ "CouponSettingInfo.PlatForm", "WMS.Core.PlatformType" },
		{ "WXCardLogInfo.CouponType", "CouponTypeEnum" },
		{ "ShopBonusInfo.UseState", "UseStateType" },
		{ "ShopBranchInfo.Status", "ShopBranchStatus" },
		{ "ShopBranchSkuInfo.Status", "ShopBranchSkuStatus" },
	
		{ "SpecificationValueInfo.Specification", "SpecificationType" },
		{ "OrderInfo.Platform", "WMS.Core.PlatformType" },
		{ "OrderComplaintInfo.Status", "ComplaintStatus" },
		{ "ExpressInfoInfo.Status", "ExpressStatus" },
		{ "ExpressElementInfo.ElementType", "ExpressElementType" },
		{ "ShopAccountItemInfo.TradeType", "ShopAccountType" },
		{ "PlatAccountItemInfo.TradeType", "PlatAccountType" },
		{ "ShopWithDrawInfo.Status", "WithdrawStaus" },
		{ "ShopWithDrawInfo.CashType", "WithdrawType" },
		{ "GiftInfo.SalesStatus", "GiftSalesStatus" },
		{ "GiftOrderInfo.OrderStatus", "GiftOrderStatus" },
		{ "OrderInfo.InvoiceType", "InvoiceType" },
		{ "OrderInvoiceInfo.InvoiceType", "InvoiceType" },
		{ "InvoiceTitleInfo.InvoiceType", "WMS.CommonModel.InvoiceType" },
		{ "CustomerServiceInfo.TerminalType", "ServiceTerminalType" },
		{ "CustomerServiceInfo.ServerStatus", "ServiceStatusType" },
		{ "CustomerServiceInfo.Type", "ServiceType" },
		{ "CustomerServiceInfo.Tool", "ServiceTool" },
		{ "ShopInfo.CompanyEmployeeCount", "CompanyEmployeeCount" },
		{ "ShopInfo.BusinessType", "ShopBusinessType" },
		{ "ShopInfo.Stage", "ShopStage" },
		{ "ActiveInfo.ActiveType", "MarketActiveType" },
		{ "OrderRefundInfo.RefundPayStatus", "OrderRefundPayStatus" },
		{ "WeiXinMsgTemplateInfo.UserInWxApplet", "WXMsgTemplateType" },
		{ "WXCardCodeLogInfo.CouponType","Entities.WXCardLogInfo.CouponTypeEnum" },
		{ "ProductInfo.EditStatus","ProductEditStatus" },
		{ "TopicInfo.Platform","WMS.Core.PlatformType" },
		{ "SellerSpecificationValueInfo.Specification","SpecificationType" },
		{ "FlashSaleInfo.Status","FlashSaleStatus" },
		{ "BusinessCategoryApplyInfo.AuditedStatus", "BusinessCateApplyStatus" },
		{ "ShopRenewRecordInfo.OperateType", "EnumOperateType" },
		{ "FloorTopicInfo.TopicType", "Position" },
		{ "MobileHomeProductInfo.PlatFormType", "WMS.Core.PlatformType" },
		{ "AgreementInfo.AgreementType", "AgreementTypes" },
		{ "AutoReplyInfo.ReplyType", "ReplyType" },
		{ "AutoReplyInfo.MatchType", "MatchType" },
		{ "MobileHomeTopicInfo.Platform", "WMS.Core.PlatformType" },
		{ "VShopExtendInfo.Type", "VShopExtendType" },
		{ "BannerInfo.Platform", "WMS.Core.PlatformType" },
		{ "BannerInfo.UrlType", "BannerUrltypes" },
		{ "VShopInfo.State", "VshopStates" },
		{ "MenuInfo.Platform", "WMS.Core.PlatformType" },
		{ "MenuInfo.UrlType", "UrlTypes" },
		{ "SlideAdInfo.TypeId", "SlideAdType" },
		{ "ImageAdInfo.TypeId", "ImageAdsType" },
		{ "ThemeInfo.TypeId", "ThemeType" },
		{ "MarketSettingInfo.TypeId", "MarketType"},
		{ "ProductDescriptionTemplateInfo.Position", "TemplatePosition"},
		{ "OrderRefundLogInfo.Step", "OrderRefundStep"},
		{ "OrderVerificationCodeInfo.Status", "OrderInfo.VerificationCodeStatus"},
		{ "VirtualOrderItemInfo.VirtualProductItemType", "ProductInfo.VirtualProductItemType"},
		{ "VirtualProductItemInfo.Type", "ProductInfo.VirtualProductItemType"},
		{"DistributionBrokerageInfo.BrokerageStatus", "DistributionBrokerageStatus"},
		{"DistributorRecordInfo.Type", "DistributorRecordType"},
		{"DistributionWithdrawInfo.WithdrawType", "DistributionWithdrawType"},
		{"DistributionWithdrawInfo.WithdrawStatus", "DistributionWithdrawStatus"}
	 };

	 ConnectionString = "server=122.51.229.47;uid=sa;pwd=launch-advisor-20180222;database=WMS;MultipleActiveResultSets=true;";

	var tables = LoadTables();
	if(tables.Count==0){return "无生成可用表";}
#>
<#@ include file="MCS.Generator.ttinclude" #>